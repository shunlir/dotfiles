"seg_vimrc-begin

call plug#begin('~/.vim/plugged')

"General {{{
    " Tab
    set tabstop=4
    set softtabstop=4
    set shiftwidth=4
    set expandtab
    filetype plugin indent on
    autocmd FileType make setlocal noexpandtab
    autocmd FileType vim setlocal softtabstop=2 shiftwidth=2 expandtab
  
    " Searching
    set ignorecase "case insensitive searching
    set smartcase  "case-sensitive if expresson contains a capital letter (typed only)
    set incsearch  "incremental search
    set hlsearch   "highlight search results
  
    " Miscs
    set wildmenu   "vim buildin command line completion
"    if has('mouse')
"      set mouse=a
"    endif
    set clipboard=exclude:.* "disable system clibpard
"}}}

"Appearence {{{

    "LineNumber {{{
        set number
        Plug 'jeffkreeftmeijer/vim-numbertoggle'
    "}}}

    "Colors {{{
        " force 256 color
        " if !has('gui_running')
        "   set t_Co=256
        " endif
 
        " optionally enable true color
        if $COLORTERM == "truecolor" && has("termguicolors")
            if !(has("nvim"))
                let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
                let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
            endif
            set termguicolors
        endif

        " color schemes
        Plug 'jeffkreeftmeijer/vim-dim'
    "}}}

    "StatusLine {{{
        set laststatus=2
        set noshowmode
        Plug 'itchyny/lightline.vim'
        "let g:lightline = {
        "      \ 'colorscheme': '',
        "      \ }
    "}}}

    "SignColumn {{{
        " ToggleSignColum
        if exists("&signcolumn")
            function! Toggle_SignColumn()
                if &signcolumn == 'yes' || &signcolumn == 'auto'
                    let &signcolumn='no'
                else
                    let &signcolumn='yes'
                endif
            endfunction
            command! -nargs=0 ToggleSignColumn call Toggle_SignColumn()
        endif
        Plug 'mhinz/vim-signify'
        let g:signify_vcs_list = [ 'git', 'hg' ]
        " TODO: set highlight SignifySignAdd... here dosn't work, need to figure
        " out why
    "}}}
"}}}


"FuzzyFinder {{{
    Plug 'Yggdroot/LeaderF', { 'do': './install.sh' } " default use 256 color for TUI
    let g:Lf_ShortcutF = '<C-p>'  " Ctrl+P - all files
    let g:Lf_ShortcutB = '<M-p>'  " Alt+P  - opened files
    noremap <M-m> :LeaderfMru<cr>
    noremap <M-f> :LeaderfFunction!<cr>
    noremap <M-t> :LeaderfTag<cr>
    let g:Lf_StlSeparator = { 'left': '', 'right': '', 'font': '' }
    let g:Lf_WildIgnore = { 'dir': ['.svn','.git','.hg'] }
    let g:Lf_RootMarkers = ['.project', '.root', '.svn', '.git']
    let g:Lf_WorkingDirectoryMode = 'Ac'
    let g:Lf_WindowHeight = 0.30
    let g:Lf_CacheDirectory = expand('~/.vim/cache')
    let g:Lf_ShowRelativePath = 0
    let g:Lf_HideHelp = 1
    let g:Lf_StlColorscheme = 'powerline'
    let g:Lf_PreviewResult = {'Function':0, 'BufTag':0}
"}}}


"Mappings {{{
    let mapleader = ","
    " toggle paste mode
    noremap <F9> :set paste!<cr>
    "noremap <F10> :call Toggle_SignColumn()<CR>
    noremap <F10> :ToggleSignColumn<CR>

    "VimTuiMetaKey {{{
    " set keycode of some <M-?> to use <ESC> prefix, see :map-alt-keys
    function! TUI_MetaUseEsc()
        set ttimeout
        if !empty($TMUX)       "tmux is expected to set its own escape-time to 50
            set ttimeoutlen=30
        elseif &ttimeoutlen > 80 || &ttimeoutlen <= 0
            set ttimeoutlen=80
        endif
        if has('nvim') || has('gui_running')
            return
        endif
        function! s:metacode(key)
            exec "set <M-".a:key.">=\e".a:key
        endfunc
        for i in range(10)
            call s:metacode(nr2char(char2nr('0') + i))
        endfor
        for i in range(26)
            call s:metacode(nr2char(char2nr('a') + i))
            call s:metacode(nr2char(char2nr('A') + i))
        endfor
        for c in [',', '.', '/', ';']
            call s:metacode(c)
        endfor
    endfunc
    call TUI_MetaUseEsc()
    "}}}
"}}}

"GeneralFunctionality {{{
    Plug 'tpope/vim-surround'
    " Git wrapper
    Plug 'tpope/vim-fugitive'
"}}}

"LanguageSpecificConfiguration {{{
    "C/C++ {{{
        function! BuildYCM(info)
            " info is a dictionary with 3 fields
            " - name:   name of the plugin
            " - status: 'installed', 'updated', or 'unchanged'
            " - force:  set on PlugInstall! or PlugUpdate!
            if a:info.status == 'installed' || a:info.force
                !./install.py
            endif
        endfunction
        "Plug 'Valloric/YouCompleteMe', { 'do': function('BuildYCM') }
    "}}}
"}}}

call plug#end()

"FinalSetup {{{
  if has('gui_running')
      set background=light
  else
      set background=dark
  endif
  syntax enable
  colorscheme dim
  " SignColumn is set by colorscheme, clear it then set hi for signify
  highlight clear SignColumn
  highlight SignifySignAdd    term=bold ctermbg=none  ctermfg=green
  highlight SignifySignDelete term=bold ctermbg=none  ctermfg=red
  highlight SignifySignChange term=bold ctermbg=none  ctermfg=yellow
"}}}
