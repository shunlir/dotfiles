#
# set  = set-option
# setw = set-window-option
# bind = bind-key
#

# remap prefix to 'alt + a'
unbind C-b
set -g prefix M-a
bind M-a send-prefix

set-option -g escape-time 50

# start windows at 1, not 0
set -g base-index 1

# start panes at 1, not 0
setw -g pane-base-index 1

# enable 256color terminal if outside support it
if-shell 'tput -T tmux colors' \
    'set -g default-terminal "tmux"' \
    'set -g default-terminal "screen"'
if-shell 'expr "$TERM" : ".*256color.*"' \
    'set -g default-terminal "screen-256color"' 
if-shell 'expr "$TERM" : ".*256color.*" && tput -T tmux-256color colors' \
    'set -g default-terminal "tmux-256color"' 
set -g default-terminal "screen"

# enable truecolor for putty-256color terminal (tmux info | grep Tc)
set -sa terminal-overrides ",putty-256*:Tc"

# max scroll lines
set -g history-limit 10240

# vi-style key bindings for copy mode
setw -g mode-keys vi

# emacs key bindings for command mode
set -g status-keys emacs

# enable mouse
#set-option -g mouse on
#unbind -T copy-mode-vi  MouseDragEnd1Pane

# update the status line every 59 seconds
set -g  status-interval 59

#
# Key bindings
#

# vim style enter copy mode: <prefix><Esc>
unbind [
bind Escape copy-mode
# vim style visual selection: v
bind -T copy-mode-vi v send -X begin-selection
# vim style copy: y
bind -T copy-mode-vi y send -X copy-selection-and-cancel
# vim style paste: <prefix>p
unbind p
bind p paste-buffer

# refresh config file
bind r source-file ~/.tmux.conf \; display-message " Config reloaded ..."

# moving windows
bind -r > swap-window -t :+
bind -r < swap-window -t :-

# enter copy mode search backword: Alt-s
bind -n M-s copy-mode \; send-keys ?

# split window
bind -n M-| split-window -h
bind -n M-- split-window -v

# switch to n-th window: alt-n
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# move active pane to n-th window: to Alt-Shift-n
bind-key -n "M-!" join-pane -t :1
bind-key -n "M-@" join-pane -t :2
bind-key -n "M-#" join-pane -t :3
bind-key -n "M-\$" join-pane -t :4
bind-key -n "M-%" join-pane -t :5
bind-key -n "M-^" join-pane -t :6
bind-key -n "M-&" join-pane -t :7
bind-key -n "M-*" join-pane -t :8
bind-key -n "M-(" join-pane -t :9

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind -n M-r if-shell "$is_vim" "send-keys M-r"  "select-pane -l"
bind -T copy-mode-vi M-h select-pane -L
bind -T copy-mode-vi M-j select-pane -D
bind -T copy-mode-vi M-k select-pane -U
bind -T copy-mode-vi M-l select-pane -R
bind -T copy-mode-vi M-r select-pane -l

# pane resize with awareness of vim splits
bind -n M-H if-shell "$is_vim" "send-keys M-H" "resize-pane -L 10"
bind -n M-L if-shell "$is_vim" "send-keys M-L" "resize-pane -R 10"
bind -n M-K if-shell "$is_vim" "send-keys M-K" "resize-pane -U 5"
bind -n M-J if-shell "$is_vim" "send-keys M-J" "resize-pane -D 5"

# zoom in pane (full screen)
bind -n M-f resize-pane -Z
# last pane
bind -n M-r select-pane -l
# kill pane
bind x kill-pane
# toggle status line
bind t set status

#setw -g automatic-rename on
#setw -g automatic-rename-format "#{b:pane_current_path}"

#
# Appearance
#

# quiet
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action none
setw -g monitor-activity off

# clock
setw -g clock-mode-colour magenta

# (copy) mode
setw -g mode-style bg=yellow,fg=red

# panes
set -g pane-border-style fg=brightblack,bright

# statusbar
set -g status-position bottom
set -g status-justify left
set -g status-style bg=default,fg=green
set -g status-left-length 20
set -g status-right-length 50
set -g status-right '#h %m/%d %H:%M:%S '

# window title (see @tty_check_fg() for more about color fallback)
setw -g window-status-style fg=colour246 # fg=grey58 fallback to 7(white)
setw -g window-status-current-style fg=colour34,bold # fg=green3,bold fallback to 2(green), losing bold
setw -g window-status-current-style fg=colour40,bold # fg=green3,bold fallback to 10 then to 2(green)+bold

setw -g window-status-bell-style bg=red,fg=white,bright

# message
set -g message-style bg=default,fg=colour206 # fg=hotpink, fallback to 5(magenta)
